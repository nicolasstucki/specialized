[[syntax trees at end of                     typer]] // newSource1
package <empty> {
  import ch.epfl.lamp.specialized._;
  import scala.reflect.ClassTag;
  class C[T >: Nothing <: Any] extends scala.AnyRef {
    implicit <synthetic> <paramaccessor> private[this] val evidence$1: scala.reflect.ClassTag[T] = _;
    def <init>()(implicit evidence$1: scala.reflect.ClassTag[T]): C[T] = {
      C.super.<init>();
      ()
    };
    def m(): Unit = {
      def m_spec_Generic1(): Unit = scala.this.Predef.println();
      def m_spec_Boolean1(): Unit = scala.this.Predef.println();
      def m_spec_Double1(): Unit = scala.this.Predef.println();
      def m_spec_Int1(): Unit = scala.this.Predef.println();
      if (C.this.evidence$1.==(ManifestFactory.Boolean))
  m_spec_Boolean1()
else
  if (C.this.evidence$1.==(ManifestFactory.Double))
    m_spec_Double1()
  else
    if (C.this.evidence$1.==(ManifestFactory.Int))
      m_spec_Int1()
    else
      m_spec_Generic1().asInstanceOf[Unit]
    }
  }
}