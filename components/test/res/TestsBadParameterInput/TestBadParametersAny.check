newSource1.scala:7: error: Specify type parameter using: specialized[T] {...}, T must be a type parameter of the enclosing context and it must have a ClassTag. Type patameter must be on top level, example: if you want to specialize an Array[T] use specialize[T] {...}.
      specialized[Any](Int, Double, Boolean) {
                                             ^
[[syntax trees at end of                     typer]] // newSource1.scala
package <empty> {
  import ch.epfl.lamp.specialized._;
  class C[T >: Nothing <: Any, U >: Nothing <: Any] extends scala.AnyRef {
    def <init>(): C[T,U] = {
      C.super.<init>();
      ()
    };
    def m(): <error> = ch.epfl.lamp.specialized.`package`.specialized[Any].apply[Int](scala.Int, scala.Double, scala.Boolean)(0)(ClassTag.Any)
  }
}